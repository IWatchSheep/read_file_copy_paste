#include <conio.h>
#include <stdio.h>
#include <cstdlib>
#include <Windows.h> // use < > for all system and library headers
#include <winuser.h>
#include <cmath>
#include <iostream>
#include <iomanip>
#include <complex>
#include <string>
#include <fstream> 
#include <filesystem>

using namespace std;

// gets the size of the file
std::ifstream::pos_type filesize(const char* filename);

// clipboard
void toClipboard(HWND hwnd, const std::string& s);
int add_to_clipboard(string& clipboard, const char* file_name);

// erase file
void erase_file(const char* file_name);

// click left mouse
void click_left_mouse();

// select all the text in the file
void select_all();

// paste
void paste();

// paste file
void paste_file(string clipboard);

// save file
void save_file();

// having pasted code now I run the program
void run_program(int x, int y);

// the function
void write_1(const char* file_name,
			int paste_Cursor_Pos_x,
			int paste_Cursor_Pos_y,
			int run_Cursor_Pos_x,
			int run_Cursor_Pos_y);

int main() {
	
	const char write_program_txt[] = "C:\\read\\write_program.txt";
	const char run_program_txt[] = "C:\\read\\run_program.txt";

	// for run program
	int paste_Cursor_Pos_x = 1920;
	int paste_Cursor_Pos_y = 200;
	// for run program
	int run_Cursor_Pos_x = 1920;
	int run_Cursor_Pos_y = 200;

	// the code is inside a while loop that runs until a key is pressed
	
	bool exit = false;

	while (exit == false)
	{
		if (GetAsyncKeyState(VK_ESCAPE))
		{
			exit = true;
		}

		
		write_1(write_program_txt,
			paste_Cursor_Pos_x,
			paste_Cursor_Pos_y,
			run_Cursor_Pos_x,
			run_Cursor_Pos_y);
	}
	
	return 0;
}

// is file empty or not?
std::ifstream::pos_type filesize(const char* filename)
{
	std::ifstream in(filename, std::ifstream::ate | std::ifstream::binary);
	return in.tellg();
}

// copy file to clipboard part 1

void toClipboard(HWND hwnd, const std::string& s) 
{
	OpenClipboard(hwnd);
	EmptyClipboard();
	HGLOBAL hg = GlobalAlloc(GMEM_MOVEABLE, s.size() + 1);
	if (!hg) {
		CloseClipboard();
		return;
	}
	memcpy(GlobalLock(hg), s.c_str(), s.size() + 1);
	GlobalUnlock(hg);
	SetClipboardData(CF_TEXT, hg);
	CloseClipboard();
	GlobalFree(hg);
}

// copy file to clipboard part 2

int add_to_clipboard(string& clipboard, const char* file_name)
{
	// the string copied to the clipboard
	ifstream inputFile(file_name);

	if (!inputFile.is_open()) {
		cerr << "Error opening the file!" << endl;
		return 1;
	}

	string read_line;

	while (getline(inputFile, read_line)) {
		clipboard.append(read_line);
		clipboard.append("\n");
	}
	inputFile.close();
}

// erase file

void erase_file(const char* file_name)
{
	std::ofstream ofs;
	ofs.open(file_name, std::ofstream::out | std::ofstream::trunc);
	ofs.close();
}

// click left mouse
void click_left_mouse()
{
	// left click the text editor so I can paste in the text
	mouse_event(MOUSEEVENTF_LEFTDOWN, 0, 0, 0, 0);
	mouse_event(MOUSEEVENTF_LEFTUP, 0, 0, 0, 0);
}

// select all
void select_all()
{
	// Select all the text in the text editor
	keybd_event(VK_CONTROL, 0x1D, KEYEVENTF_EXTENDEDKEY | 0, 0);
	keybd_event('A', 0x2F, KEYEVENTF_EXTENDEDKEY | 0, 0);
	keybd_event('A', 0x2F, KEYEVENTF_EXTENDEDKEY | KEYEVENTF_KEYUP, 0);
	keybd_event(VK_CONTROL, 0x1D, KEYEVENTF_EXTENDEDKEY | KEYEVENTF_KEYUP, 0);
}

// paste text
void paste()
{
	// paste in the text into the text editor
	keybd_event(VK_CONTROL, 0x1D, KEYEVENTF_EXTENDEDKEY | 0, 0);
	keybd_event('V', 0x2F, KEYEVENTF_EXTENDEDKEY | 0, 0);
	keybd_event('V', 0x2F, KEYEVENTF_EXTENDEDKEY | KEYEVENTF_KEYUP, 0);
	keybd_event(VK_CONTROL, 0x1D, KEYEVENTF_EXTENDEDKEY | KEYEVENTF_KEYUP, 0);
}

// save file
void save_file()
{
	// save the text in the text editor
	keybd_event(VK_CONTROL, 0x1D, KEYEVENTF_EXTENDEDKEY | 0, 0);
	keybd_event('S', 0x2F, KEYEVENTF_EXTENDEDKEY | 0, 0);
	keybd_event('S', 0x2F, KEYEVENTF_EXTENDEDKEY | KEYEVENTF_KEYUP, 0);
	keybd_event(VK_CONTROL, 0x1D, KEYEVENTF_EXTENDEDKEY | KEYEVENTF_KEYUP, 0);
}

// paste file
void paste_file(string clipboard)
{
	// get desktop windows and the call toClipboard
	HWND hwnd = GetDesktopWindow();
	toClipboard(hwnd, clipboard);

	click_left_mouse();

	select_all();

	paste();

	save_file();
}

void run_program(int x, int y)
{
	// set the position of the mouse over the run program button 
	SetCursorPos(x, y);

	click_left_mouse();
}

// write to run_program_txt

void write_1(const char* file_name,
			int paste_Cursor_Pos_x,
			int paste_Cursor_Pos_y,
			int run_Cursor_Pos_x, 
			int run_Cursor_Pos_y)
{
	string clipboard = "";

	// reads the size of the write_program.txt file to see if there's any new text to paste
	int Size_Of_File = filesize(file_name);

	if (Size_Of_File > 0)
	{
		// set the position of the mouse over the editor
		SetCursorPos(paste_Cursor_Pos_x, paste_Cursor_Pos_y);

		string empty = "";
		// paste file into editor
		paste_file(empty);

		// the string copied to the clipboard
		add_to_clipboard(clipboard, file_name);

		// empty the file
		erase_file(file_name);

		// paste file into editor
		paste_file(clipboard);

		// run program
		run_program(run_Cursor_Pos_x, run_Cursor_Pos_y);
	}
}